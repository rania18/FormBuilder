{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Test form builder\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport ListForm from \"./components/ListForm\";\nimport { useEffect, useState } from \"react\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { useDispatch } from \"react-redux\";\nimport { getForm, createForm } from \"./actions/form\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppBar, Container, Grid, Grow, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = useState(1);\n  useEffect(() => {\n    dispatch(getForm());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grow, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              className: classes.mainContainer,\n              justify: \"space-between\",\n              alignItems: \"stretch\",\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xl: 12,\n                sm: 10,\n                children: /*#__PURE__*/_jsxDEV(ListForm, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xHYRxcg5HJ/ul74Tato1vue+NDg=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Projects/Test form builder/client/src/App.js"],"names":["makeStyles","List","ListItem","ListItemIcon","ListItemText","Home","ListForm","useEffect","useState","ListIcon","HomeIcon","useDispatch","getForm","createForm","BrowserRouter","Router","Switch","Route","AppBar","Container","Grid","Grow","Typography","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","App","dispatch","classes","selectedIndex","setSelectedIndex","mainContainer"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,gBAApC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,UAAxC,QAA0D,mBAA1D;;AAEA,MAAMC,SAAS,GAAGvB,UAAU,CAAEwB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,CAAC,CAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,QAAQ,CAACrB,OAAO,EAAR,CAAR;AACD,GAFQ,EAEN,CAACqB,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAA,+BACE,QAAC,SAAD;AAAA,iCACE,QAAC,IAAD;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,SAAS,EAAEC,OAAO,CAACG,aAFrB;AAGE,cAAA,OAAO,EAAC,eAHV;AAIE,cAAA,UAAU,EAAC,SAJb;AAKE,cAAA,OAAO,EAAE,CALX;AAAA,sCAOE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,EAAvB;AAAA,uCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPF,eAUE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,EAAvB;AAAA,uCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAnCQL,G;UACUrB,W,EACDY,S;;;KAFTS,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport ListForm from \"./components/ListForm\";\nimport { useEffect, useState } from \"react\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { useDispatch } from \"react-redux\";\nimport { getForm, createForm } from \"./actions/form\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppBar, Container, Grid, Grow, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\nfunction App() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  useEffect(() => {\n    dispatch(getForm());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Grow in>\n          <Container>\n            <Grid>\n              <Grid\n                container\n                className={classes.mainContainer}\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item xs={12} sm={10}>\n                  <Home />\n                </Grid>\n                <Grid item xl={12} sm={10}>\n                  <ListForm />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </Grow>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}