{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Test form builder\\\\client\\\\src\\\\components\\\\Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Checkbox(_ref) {\n  _s();\n\n  let {\n    option\n  } = _ref;\n  const [fields, setFields] = useState([]);\n\n  function handleChange(i, event) {\n    const values = [...fields];\n    values[i].value = event.target.value.split(',');\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({\n      value: null\n    });\n    setFields(values);\n    option(fields); // console.log(typeof(fields))\n  }\n\n  function handleRemove(e) {\n    console.log(e, \"e\");\n    const values = [...fields];\n\n    for (var i = 0; i < values.length; i++) {\n      if (i === e) {\n        values.splice(i, 1);\n      }\n    }\n\n    setFields(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: fields.map((field, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          placeholder: \"Enter text\",\n          onChange: e => handleChange(idx, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"button\",\n          onClick: () => handleRemove(idx),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, `${field}-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkbox, \"QuDiUe3jM1gvFT1hd5gEsdMeA/g=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["C:/Projects/Test form builder/client/src/components/Checkbox.js"],"names":["useState","AddIcon","Button","TextField","RadioButtonUncheckedIcon","ClearIcon","CheckBoxOutlineBlankIcon","Checkbox","option","fields","setFields","handleChange","i","event","values","value","target","split","handleAdd","push","handleRemove","e","console","log","length","splice","map","field","idx"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;;;AACA,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASW,YAAT,CAAsBC,CAAtB,EAAyBC,KAAzB,EAAgC;AAC9B,UAAMC,MAAM,GAAG,CAAC,GAAGL,MAAJ,CAAf;AACAK,IAAAA,MAAM,CAACF,CAAD,CAAN,CAAUG,KAAV,GAAkBF,KAAK,CAACG,MAAN,CAAaD,KAAb,CAAmBE,KAAnB,CAAyB,GAAzB,CAAlB;AACAP,IAAAA,SAAS,CAACI,MAAD,CAAT;AACD;;AAED,WAASI,SAAT,GAAqB;AACnB,UAAMJ,MAAM,GAAG,CAAC,GAAGL,MAAJ,CAAf;AACAK,IAAAA,MAAM,CAACK,IAAP,CAAY;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAZ;AACAL,IAAAA,SAAS,CAACI,MAAD,CAAT;AACAN,IAAAA,MAAM,CAACC,MAAD,CAAN,CAJmB,CAMnB;AACD;;AAED,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,GAAf;AACA,UAAMP,MAAM,GAAG,CAAC,GAAGL,MAAJ,CAAf;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,MAAM,CAACU,MAA3B,EAAmCZ,CAAC,EAApC,EAAwC;AACtC,UAAIA,CAAC,KAAKS,CAAV,EAAa;AACXP,QAAAA,MAAM,CAACW,MAAP,CAAcb,CAAd,EAAiB,CAAjB;AACD;AACF;;AACDF,IAAAA,SAAS,CAACI,MAAD,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAGGL,MAAM,CAACiB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1B,0BACE;AAAA,gCACE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,QAAQ,EAAGP,CAAD,IAAOV,YAAY,CAACiB,GAAD,EAAMP,CAAN;AAH/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,OAAO,EAAE,MAAMD,YAAY,CAACQ,GAAD,CAJ7B;AAAA,iCAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAAW,GAAED,KAAM,IAAGC,GAAI,EAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD,KAnBA;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAvDQrB,Q;;KAAAA,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nfunction Checkbox({option}) {\n  const [fields, setFields] = useState([]);\n\n  function handleChange(i, event) {\n    const values = [...fields];\n    values[i].value = event.target.value.split(',');\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({ value: null });\n    setFields(values);\n    option(fields)\n    \n    // console.log(typeof(fields))\n  }\n\n  function handleRemove(e) {\n    console.log(e, \"e\");\n    const values = [...fields];\n    for (var i = 0; i < values.length; i++) {\n      if (i === e) {\n        values.splice(i, 1);\n      }\n    }\n    setFields(values);\n  }\n\n  return (\n    <div className=\"App\">\n      \n\n      {fields.map((field, idx) => {\n        return (\n          <div key={`${field}-${idx}`}>\n            <CheckBoxOutlineBlankIcon />\n            <TextField\n              type=\"text\"\n              placeholder=\"Enter text\"\n              onChange={(e) => handleChange(idx, e)}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"button\"\n              onClick={() => handleRemove(idx)}\n            >\n              <ClearIcon />\n            </Button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}