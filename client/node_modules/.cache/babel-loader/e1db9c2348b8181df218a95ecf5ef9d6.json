{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Test form builder\\\\client\\\\src\\\\components\\\\ModalQue.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, FormControl, InputLabel, MenuItem, Modal, NativeSelect, Select, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\nimport Checkbox from \"./Checkbox\";\nimport Multiplechoice from \"./Multiplechoice\";\nimport Textbox from \"./Textbox\";\nimport { useDispatch } from 'react-redux';\nimport { createForm } from '../actions/form.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    width: \"60%\"\n  },\n  btn: {\n    marginLeft: 20\n  },\n  paper: {\n    position: \"absolute\",\n    // alignContent:\"center\",\n    width: \"60%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    padding: 100\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nfunction ModalQue(_ref) {\n  _s();\n\n  let {\n    handleClose\n  } = _ref;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [choice, setChoice] = useState(\"\");\n  const [modalStyle] = React.useState(getModalStyle);\n  const [questionsAnswers, setQuestionsAnswers] = useState([]);\n  const [question, setQuestion] = useState({\n    formName: \"\",\n    queTitle: \"\",\n    options: {}\n  });\n  useEffect(e => {\n    console.log(choice); // setChoice(e.target.value);\n  }, [choice]);\n\n  const ansChoice = e => {\n    setChoice(e.target.value);\n  };\n\n  const anstypecomp = () => {\n    if (choice == \"checkbox\") {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        option: optionsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (choice == \"multiplechoice\") {\n      // return <Multiplechoice />;\n      return /*#__PURE__*/_jsxDEV(Multiplechoice, {\n        option: optionsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Textbox, {\n        option: optionsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const optionsHandler = fields => {\n    // let val = fields.value\n    // fields.map((val)=>{\n    // console.log(val, \"val\")\n    // })\n    function getFields(input, field) {\n      var output = [];\n\n      for (var i = 0; i < input.length; ++i) output.push(input[i][field]); // return console.log(output, \"output\")\n\n\n      return output;\n    }\n\n    var result = getFields(fields, \"value\");\n    console.log(result, \"result\");\n    setQuestion({ ...question,\n      options: fields\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); // to send values to db\n\n    dispatch(createForm(question));\n    handleClose(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        id: \"outlined-basic\",\n        label: \"Form Title\",\n        name: \"formName\",\n        value: question.formName,\n        onChange: e => setQuestion({ ...question,\n          formName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        id: \"outlined-basic\",\n        label: \"Question\",\n        name: \"queTitle\",\n        value: question.creator,\n        onChange: e => setQuestion({ ...question,\n          queTitle: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-outlined-label\",\n          id: \"demo-simple-select-outlined\",\n          name: \"ansChoice\",\n          onChange: ansChoice,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), \" Check Box\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"multiplechoice\",\n            children: [/*#__PURE__*/_jsxDEV(RadioButtonCheckedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), \" Multiple Choice\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(ShortTextIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), \" Text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), anstypecomp(), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalQue, \"yE16lxyIC8jfg0PymCI1BaXb/5s=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = ModalQue;\nexport default ModalQue;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalQue\");","map":{"version":3,"sources":["C:/Projects/Test form builder/client/src/components/ModalQue.js"],"names":["React","useEffect","useState","Button","FormControl","InputLabel","MenuItem","Modal","NativeSelect","Select","TextField","makeStyles","CheckBoxIcon","RadioButtonCheckedIcon","ShortTextIcon","Checkbox","Multiplechoice","Textbox","useDispatch","createForm","useStyles","theme","root","display","flexWrap","textField","width","btn","marginLeft","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","formControl","margin","minWidth","selectEmpty","marginTop","getModalStyle","top","left","transform","ModalQue","handleClose","dispatch","classes","choice","setChoice","modalStyle","questionsAnswers","setQuestionsAnswers","question","setQuestion","formName","queTitle","options","e","console","log","ansChoice","target","value","anstypecomp","optionsHandler","fields","getFields","input","field","output","i","length","push","result","submitHandler","preventDefault","creator"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Modal,\n  NativeSelect,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\nimport Checkbox from \"./Checkbox\";\nimport Multiplechoice from \"./Multiplechoice\";\nimport Textbox from \"./Textbox\";\nimport {useDispatch} from 'react-redux'\nimport {createForm} from '../actions/form.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    width: \"60%\",\n  },\n  btn: {\n    marginLeft: 20,\n  },\n  paper: {\n    position: \"absolute\",\n    // alignContent:\"center\",\n    width: \"60%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    padding:100,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nfunction ModalQue({handleClose}) {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [choice, setChoice] = useState(\"\");\n  const [modalStyle] = React.useState(getModalStyle);\n  const [questionsAnswers, setQuestionsAnswers] = useState([]);\n  const [question, setQuestion] = useState({\n    formName:\"\",\n    queTitle: \"\",\n    options: {},\n  });\n  useEffect((e) => {\n    console.log(choice);\n    // setChoice(e.target.value);\n\n  }, [choice]);\n  const ansChoice = (e) => {\n    setChoice(e.target.value);\n  };\n  const anstypecomp = () => {\n    if (choice == \"checkbox\") {\n      return <Checkbox option={optionsHandler} />;\n    }\n    if (choice == \"multiplechoice\") {\n      // return <Multiplechoice />;\n      return <Multiplechoice option={optionsHandler} />;\n    } else {\n      return <Textbox option={optionsHandler} />;\n    }\n  };\n  const optionsHandler = (fields) => {\n    // let val = fields.value\n    // fields.map((val)=>{\n    // console.log(val, \"val\")\n      \n    // })\n    function getFields(input, field) {\n      var output = [];\n      for (var i=0; i < input.length ; ++i)\n          output.push(input[i][field]);\n      // return console.log(output, \"output\")\n      return output\n  }\n  \n  var result = getFields(fields, \"value\"); \n  console.log(result, \"result\")\n    setQuestion({ ...question, options: fields });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // to send values to db\n    dispatch(createForm(question))\n    handleClose(e)\n  };\n  return (\n    <div>\n      <div style={modalStyle} className={classes.paper}>\n        <TextField\n          className={classes.textField}\n          id=\"outlined-basic\"\n          label=\"Form Title\"\n          name=\"formName\"\n          value={question.formName}\n          onChange={(e) => setQuestion({ ...question, formName: e.target.value })}\n        />\n\n        <TextField\n          className={classes.textField}\n          id=\"outlined-basic\"\n          label=\"Question\"\n          name=\"queTitle\"\n          value={question.creator}\n          onChange={(e) =>\n            setQuestion({ ...question, queTitle: e.target.value })\n          }\n        />\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            name=\"ansChoice\"\n            onChange={ansChoice}\n          >\n            <MenuItem value={\"checkbox\"}>\n              <CheckBoxIcon /> Check Box\n            </MenuItem>\n            <MenuItem value={\"multiplechoice\"}>\n              <RadioButtonCheckedIcon /> Multiple Choice\n            </MenuItem>\n            <MenuItem value={\"textbox\"}>\n              <ShortTextIcon /> Text\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        {anstypecomp()}\n\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n          onClick={submitHandler}\n        >\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ModalQue;\n"]},"metadata":{},"sourceType":"module"}