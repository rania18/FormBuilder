{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Test form builder\\\\client\\\\src\\\\components\\\\Multiplechoice.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Button, TextField } from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Multiplechoice(_ref) {\n  _s();\n\n  let {\n    option\n  } = _ref;\n  const [fields, setFields] = useState([{\n    value: null\n  }]);\n\n  function handleChange(i, event) {\n    const values = [...fields];\n    values[i].value = event.target.value;\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({\n      value: null\n    });\n    setFields(values);\n    option(fields);\n  }\n\n  const handleRemove = e => {\n    const values = [...fields];\n\n    for (var i = 0; i < values.length; i++) {\n      if (i === e) {\n        values.splice(i, 1);\n      }\n    }\n\n    console.log(values);\n    setFields(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [fields.map((field, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          placeholder: \"Enter text\",\n          onChange: e => handleChange(idx, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"button\",\n          onClick: () => handleRemove(idx),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, `${field}-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"button\",\n      onClick: () => handleAdd(),\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Multiplechoice, \"RWPyk/9FeXRQTchwVYLVxt9HGR4=\");\n\n_c = Multiplechoice;\nexport default Multiplechoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplechoice\");","map":{"version":3,"sources":["C:/Projects/Test form builder/client/src/components/Multiplechoice.js"],"names":["useState","AddIcon","Button","TextField","RadioButtonUncheckedIcon","ClearIcon","Multiplechoice","option","fields","setFields","value","handleChange","i","event","values","target","handleAdd","push","handleRemove","e","length","splice","console","log","map","field","idx"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SACIC,MADJ,EAEIC,SAFJ,QAGS,mBAHT;AAIE,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AACF,SAASC,cAAT,OAAkC;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAC;AAAEU,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAD,CAApC;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyBC,KAAzB,EAAgC;AAC9B,UAAMC,MAAM,GAAG,CAAC,GAAGN,MAAJ,CAAf;AACAM,IAAAA,MAAM,CAACF,CAAD,CAAN,CAAUF,KAAV,GAAkBG,KAAK,CAACE,MAAN,CAAaL,KAA/B;AACAD,IAAAA,SAAS,CAACK,MAAD,CAAT;AACD;;AAED,WAASE,SAAT,GAAqB;AACnB,UAAMF,MAAM,GAAG,CAAC,GAAGN,MAAJ,CAAf;AACAM,IAAAA,MAAM,CAACG,IAAP,CAAY;AAAEP,MAAAA,KAAK,EAAE;AAAT,KAAZ;AACAD,IAAAA,SAAS,CAACK,MAAD,CAAT;AACAP,IAAAA,MAAM,CAACC,MAAD,CAAN;AACD;;AAED,QAAMU,YAAY,GAAEC,CAAD,IAAK;AACtB,UAAML,MAAM,GAAG,CAAC,GAAGN,MAAJ,CAAf;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,MAAM,CAACM,MAA3B,EAAmCR,CAAC,EAApC,EAAwC;AACpC,UAAIA,CAAC,KAAKO,CAAV,EAAa;AACXL,QAAAA,MAAM,CAACO,MAAP,CAAcT,CAAd,EAAiB,CAAjB;AACD;AACF;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACFL,IAAAA,SAAS,CAACK,MAAD,CAAT;AACD,GATD;;AAUE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAKGN,MAAM,CAACgB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1B,0BACE;AAAA,gCACA,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,QAAQ,EAAEP,CAAC,IAAIR,YAAY,CAACe,GAAD,EAAMP,CAAN;AAH7B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,IAAI,EAAC,QAAjD;AAA0D,UAAA,OAAO,EAAE,MAAMD,YAAY,CAACQ,GAAD,CAArF;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAAW,GAAED,KAAM,IAAGC,GAAI,EAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA,CALH,eAoBG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAA0D,MAAA,OAAO,EAAE,MAAMV,SAAS,EAAlF;AAAA,6BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YApBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GArDMV,c;;KAAAA,c;AAuDT,eAAeA,cAAf","sourcesContent":["import { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n    Button,\n    TextField,\n  } from \"@material-ui/core\";\n  import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n  import ClearIcon from '@material-ui/icons/Clear';\nfunction Multiplechoice({option}) {\n  const [fields, setFields] = useState([{ value: null }]);\n  \n  function handleChange(i, event) {\n    const values = [...fields];\n    values[i].value = event.target.value;\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({ value: null });\n    setFields(values);\n    option(fields)\n  }\n\n  const handleRemove=(e)=>{\n    const values = [...fields];\n    for (var i = 0; i < values.length; i++) {\n        if (i === e) {\n          values.splice(i, 1);\n        }\n      }   \n      console.log(values)\n    setFields(values);\n  }\n    return (\n      <div className=\"App\">\n\n  \n       \n  \n        {fields.map((field, idx) => {\n          return (\n            <div key={`${field}-${idx}`}>\n            <RadioButtonUncheckedIcon/>\n              <TextField\n                type=\"text\"\n                placeholder=\"Enter text\"\n                onChange={e => handleChange(idx, e)}\n              />\n              <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={() => handleRemove(idx)}>\n                <ClearIcon/>\n              </Button>\n            </div>\n          );\n        })}\n         <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={() => handleAdd()}>\n          <AddIcon/>\n          \n        </Button>\n      </div>\n    );\n  }\n\nexport default Multiplechoice;\n"]},"metadata":{},"sourceType":"module"}